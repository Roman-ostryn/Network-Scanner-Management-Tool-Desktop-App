<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="SC.AgentDeployer.Client.Views.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" xmlns:viewModels="clr-namespace:SC.AgentDeployer.Client.ViewModels" xmlns:converters="clr-namespace:SC.AgentDeployer.Client.ValueConverters" xmlns:helpers="clr-namespace:SC.AgentDeployer.Client.Helpers" xmlns:behaviors="clr-namespace:SC.AgentDeployer.Client.Behaviors" Title="Agent Deployer" Height="680" Width="1200" MinWidth="1200" WindowStartupLocation="CenterScreen" xmlns:views="clr-namespace:SC.AgentDeployer.Client.Views">
  <FrameworkElement.DataContext>
    <viewModels:MainViewModel />
  </FrameworkElement.DataContext>
  <UIElement.InputBindings>
    <KeyBinding Modifiers="Control" Key="S" Command="{Binding SaveReportCommand}" />
    <KeyBinding Modifiers="Control" Key="A" Command="{Binding SelectAllRowsInIpTableCommand}" />
  </UIElement.InputBindings>
  <DockPanel>
    <StatusBar DockPanel.Dock="Bottom">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
          </Grid>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <StatusBarItem Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
        <TextBlock Margin="8,2,0,2" Foreground="{StaticResource App.Text.Medium}" Text="{Binding StatusMessage}" />
      </StatusBarItem>
    </StatusBar>
    <Grid Margin="0,0,0,0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Grid Row="0" Margin="10,0,0,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Orientation="Horizontal">
          <Button Style="{DynamicResource App.Button.BorderlessStyle}" Command="{Binding ShowContextMenuCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/sync-blue-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Load Addresses" />
                <Path Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="6" Fill="{StaticResource App.Text.Dark}" Stretch="Uniform" Style="{StaticResource App.Button.Path}" Data="F1 M301.14,-189.041 L311.57,-189.041 L306.355,-182.942 L301.14,-189.041" />
              </StackPanel>
            </ContentControl.Content>
            <FrameworkElement.ContextMenu>
              <ContextMenu>
                <MenuItem Header="From Subnet" Margin="0,0,0,0" Command="{Binding LoadFromSubnetCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" />
                <MenuItem Header="From ARP Table" Command="{Binding LoadFromArpTableCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" />
              </ContextMenu>
            </FrameworkElement.ContextMenu>
          </Button>
          <Button Style="{StaticResource App.Button.BorderlessStyle}" ToolTip="Save IP addresses and statuses to a CSV file" Command="{Binding SaveReportCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/save-blue-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Save as CSV" />
              </StackPanel>
            </ContentControl.Content>
          </Button>
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />
          <Button Style="{StaticResource App.Button.BorderlessStyle}" ToolTip="Check the status of the selected IP addresses" Command="{Binding CheckStatusAsyncCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/info-blue-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Check Clients" />
              </StackPanel>
            </ContentControl.Content>
          </Button>
          <Button Style="{StaticResource App.Button.BorderlessStyle}" ToolTip="Deploy clients to selected IP addresses" Command="{Binding DeployClientsAsyncCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/plus-blue-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Deploy Clients" />
              </StackPanel>
            </ContentControl.Content>
          </Button>
          <Button Style="{StaticResource App.Button.BorderlessStyle}" ToolTip="Start selected clients" Command="{Binding StartClientsAsyncCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/play-green-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Start Clients" />
              </StackPanel>
            </ContentControl.Content>
          </Button>
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />
          <Button Style="{StaticResource App.Button.BorderlessStyle}" Command="{Binding CancelCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/stop-red-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Cancel" />
              </StackPanel>
            </ContentControl.Content>
          </Button>
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />
          <Button Style="{StaticResource App.Button.BorderlessStyle}" ToolTip="View client details" Command="{Binding EditClientDetailsCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/details-blue-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="Edit Client Details" />
              </StackPanel>
            </ContentControl.Content>
          </Button>
          <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0" />
          <TextBlock VerticalAlignment="Center" Margin="5,0,5,0" Text="Perform As:" />
          <Button Style="{DynamicResource App.Button.BorderlessStyle}" Command="{Binding ShowContextMenuCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
            <ContentControl.Content>
              <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0" Height="12" Source="../Resources/user-blue-16.png" Style="{StaticResource App.Button.Icon}" />
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5,0,5,0" Margin="0" Text="{Binding CurrentUser, ConverterParameter=40, Converter={converters:TruncateStringValueConverter}}" />
                <Path Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center" Width="6" Fill="{StaticResource App.Text.Dark}" Stretch="Uniform" Style="{StaticResource App.Button.Path}" Data="F1 M301.14,-189.041 L311.57,-189.041 L306.355,-182.942 L301.14,-189.041" />
              </StackPanel>
            </ContentControl.Content>
            <FrameworkElement.ToolTip>
              <ToolTip Content="{Binding CurrentUser}" />
            </FrameworkElement.ToolTip>
            <FrameworkElement.ContextMenu>
              <ContextMenu>
                <MenuItem Command="{Binding SetUserToCurrentCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
                  <HeaderedItemsControl.Header>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="Current User: " />
                      <TextBlock Text="{Binding LocalUser}" />
                    </StackPanel>
                  </HeaderedItemsControl.Header>
                </MenuItem>
                <MenuItem Header="Specific User..." Command="{Binding ViewDomainCredentialsCommand, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" />
              </ContextMenu>
            </FrameworkElement.ContextMenu>
          </Button>
        </StackPanel>
        <helpers:LoadingIndicator Grid.Column="2" SpeedRatio="2.5" HorizontalAlignment="Right" Padding="0" Margin="0,0,0,-25" Style="{StaticResource App.LoadingIndicatorStyle}" Visibility="{Binding IsLoading, Converter={converters:BooleanToVisibilityValueConverter}}" IsActive="{Binding IsLoading}">
          <UIElement.RenderTransform>
            <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
          </UIElement.RenderTransform>
        </helpers:LoadingIndicator>
      </Grid>
      <DataGrid Grid.Row="1" CanUserAddRows="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" IsReadOnly="False" Width="Auto" MinWidth="590" Height="Auto" HorizontalAlignment="Center" AutoGenerateColumns="False" Margin="10,10,10,10" Grid.RowSpan="2" ClipboardCopyMode="IncludeHeader" GridLinesVisibility="Horizontal" RowHeaderWidth="0" VirtualizingStackPanel.VirtualizationMode="Standard" HorizontalGridLinesBrush="{StaticResource App.Border.Light}" Style="{DynamicResource App.DataGrid}" BorderBrush="{StaticResource App.Border.Light}" ItemsSource="{Binding FilteredMachines, UpdateSourceTrigger=PropertyChanged}">
        <FrameworkElement.Resources>
          <ResourceDictionary>
            <helpers:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
          </ResourceDictionary>
        </FrameworkElement.Resources>
        <DataGrid.Columns>
          <DataGridTemplateColumn>
            <DataGridColumn.HeaderStyle>
              <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="6,3,0,0" />
                <Setter Property="Background" Value="{StaticResource App.Background.White}" />
              </Style>
            </DataGridColumn.HeaderStyle>
            <DataGridColumn.Header>
              <Button Style="{StaticResource App.NestedButtonStyle}" Cursor="Hand" Width="50" Height="20" IsEnabled="{Binding Path=Data.IsLoading, Source={StaticResource DataContextProxy}, Converter={converters:InvertBooleanValueConverter}}">
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Grid.Row="4" Margin="0">
                  <CheckBox VerticalAlignment="Bottom" IsChecked="{Binding Path=Data.AllIpAddressesSelected, Source={StaticResource DataContextProxy}, Mode=OneWay}" Command="{Binding Path=Data.ToggleIpRowSelectionCommand, Source={StaticResource DataContextProxy}}" />
                  <Button Style="{StaticResource App.NestedButtonStyle}" FontFamily="Marlett" FontSize="15" Content="6" FontWeight="DemiBold" Margin="-2,-1,0,0" VerticalAlignment="Top">
                    <i:Interaction.Behaviors>
                      <behaviors:FilterDropDownButtonBehavior />
                    </i:Interaction.Behaviors>
                    <FrameworkElement.ContextMenu>
                      <ContextMenu Width="220">
                        <FrameworkElement.Resources>
                          <ResourceDictionary>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                          </ResourceDictionary>
                        </FrameworkElement.Resources>
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Margin="-20,0,0,0" Background="{DynamicResource App.Background.White}" />
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <MenuItem>
                          <HeaderedItemsControl.Header>
                            <Grid Margin="-20,0,-40,0">
                              <FrameworkElement.Style>
                                <Style TargetType="{x:Type Grid}">
                                  <Setter Property="Background" Value="{DynamicResource App.Background.White}" />
                                </Style>
                              </FrameworkElement.Style>
                              <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                              </Grid.RowDefinitions>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="215" />
                              </Grid.ColumnDefinitions>
                              <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,10,10,5">
                                <Label Margin="0">Subnet Filter</Label>
                                <TextBox Width="100" Height="20" VerticalContentAlignment="Center" ToolTip="Uses standard IPV4 format (0.0.0.0) with each segment allowing: * as a wildcard, a range separated by a dash (0-255), or a number from 0 to 255." IsEnabled="{Binding Data.IsLoading, Source={StaticResource DataContextProxy}, Converter={converters:InvertBooleanValueConverter}}" Text="{Binding Data.SubnetFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource DataContextProxy}}">
                                  <UIElement.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding Data.FilterIpRangeCommand, Source={StaticResource DataContextProxy}}" />
                                  </UIElement.InputBindings>
                                </TextBox>
                              </StackPanel>
                              <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10,5,10,5">
                                <Button HorizontalAlignment="Stretch" Content="Reset" Margin="10,0,5,5" Width="70" Style="{DynamicResource App.ButtonStyle}" Command="{Binding Data.ResetSubnetFilterCommand, Source={StaticResource DataContextProxy}}">
                                  <FrameworkElement.ToolTip>
                                    <ToolTip>
                                      <TextBlock>Clear the subnet filter</TextBlock>
                                    </ToolTip>
                                  </FrameworkElement.ToolTip>
                                </Button>
                                <Button HorizontalAlignment="Stretch" Content="Apply" Margin="5,0,0,5" Width="70" Style="{DynamicResource App.ButtonStyle}" Command="{Binding Data.FilterIpRangeCommand, Source={StaticResource DataContextProxy}}">
                                  <FrameworkElement.ToolTip>
                                    <ToolTip>
                                      <TextBlock>Apply the subnet filter to the grid</TextBlock>
                                    </ToolTip>
                                  </FrameworkElement.ToolTip>
                                </Button>
                              </StackPanel>
                            </Grid>
                          </HeaderedItemsControl.Header>
                        </MenuItem>
                      </ContextMenu>
                    </FrameworkElement.ContextMenu>
                  </Button>
                </StackPanel>
              </Button>
            </DataGridColumn.Header>
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <CheckBox HorizontalAlignment="Center" Margin="0,0,0,0" IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Command="{Binding Path=Data.EnsureGlobalAddressCheckboxSyncedCommand, Source={StaticResource DataContextProxy}}" />
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTextColumn Header="IP Address" IsReadOnly="True" Binding="{Binding Ip}" />
          <DataGridTextColumn Header="Status" IsReadOnly="True" Width="*" Binding="{Binding Status}" />
        </DataGrid.Columns>
      </DataGrid>
    </Grid>
  </DockPanel>
</Window>